package qin.javaee8.hibernate.controller;import net.sf.json.JSONArray;import net.sf.json.JSONObject;import org.springframework.context.annotation.Scope;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.servlet.ModelAndView;import qin.javaee65.core.hibernate.controller.BaseController;import qin.javaee8.core.JavaEE8BaseSupport;import qin.javaee8.core.MainViewSupport;import qin.javaee8.hibernate.domain.Country;import qin.javaee8.hibernate.domain.User;import qin.javaee8.hibernate.domain.UserType;import qin.javaee8.hibernate.service.RoleService;import qin.javaee8.hibernate.service.UserService;import qin.javaee8.hibernate.systemDomain.Role;import javax.annotation.Resource;import javax.servlet.http.HttpServletResponse;import java.util.Iterator;import java.util.List;@Controller(value = "object8Controller")@Scope("prototype")@RequestMapping(value = "/javaee8")@SuppressWarnings("all")public class JavaEE8MainController          extends BaseController<User>          implements JavaEE8BaseSupport, MainViewSupport{    private static final long serialVersionUID = -2977784629238121376L;    //region 返回项目主页    /**     * 返回项目主页     *     * @return 项目主页     */    @RequestMapping(value = "/doMainView")    @Override    public ModelAndView doMainView()    {        return new ModelAndView("/javaee8/doMainView");    }    //endregion    //region 注入服务层    //region 用户服务层    private UserService userService;    public UserService getUserService()    {        return userService;    }    @Resource    public void setUserService(UserService userService)    {        this.userService = userService;    }    //endregion    //region 岗位服务层    private RoleService roleService;    public RoleService getRoleService()    {        return roleService;    }    @Resource    public void setRoleService(RoleService roleService)    {        this.roleService = roleService;    }    //endregion    //endregion    //region 用户管理    /**     * 显示用户所有记录     *     * @param response     */    @RequestMapping(value = "/showUser")    public void showUser(HttpServletResponse response)    {        //查询用户所有信息        List<User> userList = null;        try        {            userList = userService.findAll();            JSONArray jsonArray = new JSONArray();            //map            JSONObject object = new JSONObject();            //region 将查询结果压到object中            for (Iterator<User> uIt = userList.iterator(); uIt.hasNext(); )            {                User user = uIt.next();                //用户编号                object.put("id", user.getId());                //用户首姓名                object.put("user_firstName", user.getUser_firstName());                //用户尾姓名                object.put("user_lastName", user.getUser_lastName());                //用户登录名                object.put("user_loginName", user.getUser_loginName());                //用户邮箱                object.put("user_email", user.getUser_email());                Country country = user.getUser_country();                String userCountry = country.getId() + "--->" + country.getCountry_name();                //用户所对应的国家                object.put("user_country", userCountry);                //用户生日                object.put("user_birthdate", user.getUser_birthdate().toString());                //用户性别                object.put("user_gender", user.getUser_gender().toString());                //用户联系方式                object.put("user_phoneNumber", user.getUser_phoneNumber());                //用户描述                object.put("user_description", user.getUser_description());                //用户所对应的类型                UserType userType = user.getUserType();                String user_type = userType.getId() + "--->" + userType.getUser_type_name();                object.put("userType", user_type);                jsonArray.add(object);            }            //endregion            String baseStr = "{\"total\":" + userList.size() + ",\"rows\":";            baseStr = baseStr + jsonArray.toString() + "}";            j8Tools.returnJson(baseStr, response);            actionFlag = true;        }        catch (Exception ex)        {            actionFlag = false;        }        finally        {            j8Tools.doCheck(actionFlag);        }    }    //endregion    //region 岗位管理    @RequestMapping(value = "/showRole")    public void showRole(HttpServletResponse response)    {        List<Role> roleList = null;        try        {            roleList = roleService.findAll();            JSONArray jsonArray = new JSONArray();            //map            JSONObject object = new JSONObject();            //region 将查询结果压到object中            for (Iterator<Role> roIt = roleList.iterator(); roIt.hasNext(); )            {                Role role = roIt.next();                object.put("role_id", role.getId());                //岗位名称                object.put("role_name", role.getRole_name());                //岗位描述                object.put("role_description", role.getRole_description());                //岗位是否招满                object.put("role_isFull", role.isRole_isFull());                //岗位所需人数                object.put("role_needPersons", role.getRole_needPersons());                //岗位发布时间                object.put("role_publishTime", role.getRole_publishTime().toString());                //岗位结束时间                object.put("role_endTime", role.getRole_endTime().toString());                jsonArray.add(object);            }            //endregion            String baseStr = "{\"total\":" + roleList.size() + ",\"rows\":";            baseStr = baseStr + jsonArray.toString() + "}";            j8Tools.returnJson(baseStr, response);            actionFlag = true;        }        catch (Exception ex)        {            actionFlag = false;        }        finally        {            j8Tools.doCheck(actionFlag);        }    }    //endregion    //region 电子公章    //endregion    //region 招聘人员管理    //endregion    //region 会议管理    //endregion    //region 员工管理    //endregion    //region 员工电脑软件管理    //endregion    //region 员工项目管理    //endregion}