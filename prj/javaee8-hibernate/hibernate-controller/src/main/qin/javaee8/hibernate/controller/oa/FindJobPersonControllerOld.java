package qin.javaee8.hibernate.controller.oa;import net.sf.json.JSONArray;import net.sf.json.JSONObject;import org.springframework.context.annotation.Scope;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.servlet.ModelAndView;import qin.javaee8.core.BaseController8;import qin.javaee8.core.JavaEE8BaseSupport;import qin.javaee8.core.MainViewSupport;import qin.javaee8.hibernate.service.FindJobPersonService;import qin.javaee8.hibernate.systemDomain.FindJobPerson;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.util.Iterator;import java.util.List;/** * 招聘人员信息管理控制层 * * @author qinzhengying * @since 1.8 */@Controller("findJobPersonController8_old")@Scope("prototype")@RequestMapping(value = "findJobPerson_old")@SuppressWarnings("all")@Deprecatedpublic class FindJobPersonControllerOld          extends BaseController8<FindJobPerson>          implements JavaEE8BaseSupport, MainViewSupport{    private static final long serialVersionUID = -2114264258221242445L;    //region 注入服务层    private FindJobPersonService findJobPersonService;    public FindJobPersonService getFindJobPersonService()    {        return findJobPersonService;    }    @Resource    public void setFindJobPersonService(FindJobPersonService findJobPersonService)    {        this.findJobPersonService = findJobPersonService;    }    //endregion    //region 返回招聘人员信息首页    /**     * 返回招聘人员信息首页     *     * @return 招聘人员信息首页     */    @RequestMapping(value = "/doMainView")    @Override    public ModelAndView doMainView()    {        return new ModelAndView("/findJobPerson/doMainView");    }    //endregion    //region 显示其简略信息    @RequestMapping(value = "/simpleFindJobPerson")    public void simpleFindJobPerson(HttpServletResponse response)    {        List<FindJobPerson> findJobPersonList = null;        try        {            findJobPersonList = findJobPersonService.findAll();            JSONArray jsonArray = new JSONArray();            //map            JSONObject object = new JSONObject();            //region 将查询结果压到object中            for (Iterator<FindJobPerson> elIt = findJobPersonList.iterator(); elIt.hasNext(); )            {                FindJobPerson findJobPerson = elIt.next();                object.put("jobPersonName", findJobPerson.getJobPersonName());                object.put("jobPersonGender", getPersonGender(findJobPerson));                object.put("jobPersonStartJobTime", findJobPerson.getJobPersonStartJobTime().toString());                object.put("jobPersonJobName", findJobPerson.getJobPersonJobName());                object.put("jobPersonNowCity", findJobPerson.getJobPersonNowCity());                object.put("jobPersonBirth", findJobPerson.getJobPersonBirth().toString());                object.put("jobPersonMobile", findJobPerson.getJobPersonMobile());                object.put("jobPersonEmail", findJobPerson.getJobPersonEmail());                object.put("jobPersonCountry", findJobPerson.getJobPersonCountry());                object.put("jobPersonLocation", findJobPerson.getJobPersonLocation());                object.put("jobPersonWantJob", findJobPerson.getJobPersonWantJob());                object.put("jobPersonFunction", findJobPerson.getJobPersonFunction());                object.put("jobPersonWantLocation", findJobPerson.getJobPersonLocation());                object.put("jobPersonWantsYearSalary", findJobPerson.getJobPersonWantsYearSalary());                jsonArray.add(object);            }            //endregion            String baseStr = "{\"total\":" + findJobPersonList.size() + ",\"rows\":";            baseStr = baseStr + jsonArray.toString() + "}";            j8Tools.returnJson(baseStr, response);            actionFlag = true;        }        catch (Exception ex)        {            actionFlag = false;        }        finally        {            j8Tools.doCheck(actionFlag);        }    }    //endregion    //region 显示详细页面信息    /**     * 显示详细页面信息     *     * @return     */    @RequestMapping(value = "/findJobPersonDetails")    public ModelAndView findJobPersonDetails(HttpServletRequest request)    {        //基本信息        request.setAttribute("findJobPersonInfo", findJobPersonService.findBasicInfo());        return new ModelAndView("/findJobPerson/findJobPersonDetails");    }    //region 职业意向    @RequestMapping(value = "/findJobWants")    public void findJobWants(HttpServletResponse response)    {        List<Object[]> jobWantList = null;        try        {            jobWantList = (List<Object[]>) findJobPersonService.findJobWants();            JSONArray jsonArray = new JSONArray();            //map            JSONObject object = new JSONObject();            //region 将查询结果压到object中            for (Iterator<Object[]> elIt = jobWantList.iterator(); elIt.hasNext(); )            {                Object[] objects = elIt.next();                object.put("jobPersonWantJob", objects[0]);                object.put("jobPersonFunction", objects[1]);                object.put("jobPersonWantLocation", objects[2]);                object.put("jobPersonWantsYearSalary", objects[3]);                object.put("jobPersonOldYearSalary", objects[4]);                jsonArray.add(object);            }            //endregion            String baseStr = "{\"total\":" + jobWantList.size() + ",\"rows\":";            baseStr = baseStr + jsonArray.toString() + "}";            j8Tools.returnJson(baseStr, response);            actionFlag = true;        }        catch (Exception ex)        {            actionFlag = false;        }        finally        {            j8Tools.doCheck(actionFlag);        }    }    //endregion    //endregion}