package qin.javaee8.hibernate.controller.oa;import net.sf.json.JSONArray;import net.sf.json.JSONObject;import org.springframework.context.annotation.Scope;import org.springframework.stereotype.Controller;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.servlet.ModelAndView;import qin.javaee8.core.BaseController8;import qin.javaee8.core.JavaEE8BaseSupport;import qin.javaee8.core.MainViewSupport;import qin.javaee8.hibernate.domain.CompanyIndustry;import qin.javaee8.hibernate.domain.CompanyRole;import qin.javaee8.hibernate.hrDomain.Department;import qin.javaee8.hibernate.service.CompanyIndustryService;import qin.javaee8.hibernate.service.FindJobPersonService;import qin.javaee8.hibernate.systemDomain.FindJobPerson;import javax.annotation.Resource;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.text.SimpleDateFormat;import java.util.Date;import java.util.Iterator;import java.util.List;import java.util.Set;/** * 招聘人员信息管理控制层 * * @author qinzhengying * @since 1.8 */@Controller("findJobPersonController8")@Scope("prototype")@RequestMapping(value = "/findJobPerson")@SuppressWarnings("all")public class FindJobPersonController          extends BaseController8<FindJobPerson>          implements JavaEE8BaseSupport, MainViewSupport{    private static final long serialVersionUID = -2114264258221242445L;    //region 注入服务层    private FindJobPersonService findJobPersonService;    public FindJobPersonService getFindJobPersonService()    {        return findJobPersonService;    }    @Resource    public void setFindJobPersonService(FindJobPersonService findJobPersonService)    {        this.findJobPersonService = findJobPersonService;    }    //endregion    //region 注入公司行业服务层    private CompanyIndustryService companyIndustryService;    public CompanyIndustryService getCompanyIndustryService()    {        return companyIndustryService;    }    @Resource    public void setCompanyIndustryService(CompanyIndustryService companyIndustryService)    {        this.companyIndustryService = companyIndustryService;    }    //endregion    //region 返回招聘人员信息首页    /**     * 返回招聘人员信息首页     *     * @return 招聘人员信息首页     */    @RequestMapping(value = "/doMainView")    @Override    public ModelAndView doMainView()    {        return new ModelAndView("/findJobPerson/doMainView");    }    //endregion    //region 显示信息    //region 显示简略信息    /**     * 显示简略信息     */    @RequestMapping(value = "/showSimpleInfo")    public void showSimpleInfo(HttpServletResponse response)    {        List<FindJobPerson> findJobPersonList = null;        try        {            findJobPersonList = findJobPersonService.findAll();            JSONArray jsonArray = new JSONArray();            //map            JSONObject object = new JSONObject();            //region 将查询结果压到object中            for (Iterator<FindJobPerson> elIt = findJobPersonList.iterator(); elIt.hasNext(); )            {                FindJobPerson f = elIt.next();                object.put("id", f.getId());                object.put("jobPersonName", f.getJobPersonName());                jsonArray.add(object);            }            //endregion            String baseStr = "{\"total\":" + findJobPersonList.size() + ",\"rows\":";            baseStr = baseStr + jsonArray.toString() + "}";            j8Tools.returnJson(baseStr, response);            actionFlag = true;        }        catch (Exception ex)        {            actionFlag = false;        }        finally        {            j8Tools.doCheck(actionFlag);        }    }    //endregion    //region 显示详细信息    /**     * 显示详细信息     *     * @param id 招聘人员主键(招聘人员有很多说不定名字有重叠)     */    @RequestMapping(value = "/showDetails")    public void showDetails(FindJobPerson findJobPerson,                            HttpServletRequest request, HttpServletResponse response)    {        //由于是根据主键查询所以查询结果只有一条记录        FindJobPerson f = getFindJobPerson(findJobPerson);        j8Tools.returnJson(str_SUCCESS, response);    }    /**     * 封装获取招聘人员信息     *     * @param findJobPerson     * @return     */    private FindJobPerson getFindJobPerson(FindJobPerson findJobPerson)    {        return findJobPersonService                  .findDetails(findJobPerson)                  .get(0);    }    //endregion    //region 基本信息    //region 获取工作经验    /**     * 获取工作经验     *     * @param f     * @return     */    private StringBuilder getJobExp(FindJobPerson f)    {        StringBuilder result = new StringBuilder();        //开始年份        String startYear = f.getJobPersonStartJobTime().toString();        int index = startYear.indexOf('-');        String endYear = startYear.substring(0, index);        //endYear(Integer)将截取到的日期转化成整型        int endI = Integer.valueOf(endYear);        //年份        int year = calendar.getWeekYear();        result.append(year - endI)                  .append('年');        return result;    }    //endregion    /**     * 基本信息     *     * @param response     */    @RequestMapping(value = "/per_basicInfo")    public void per_basicInfo(HttpServletResponse response, FindJobPerson f)    {        StringBuilder html = new StringBuilder();        f = getFindJobPerson(f);        //姓名        String s1 = f.getJobPersonName();        //职能名称——之前公司名称        String s2 = f.getJobPersonOldJob() + "-------" + f.getJobPersonOldCompanyName();        //地区|当前行业职能|职位名称|工作经验        StringBuilder s3 = new StringBuilder()                  .append(f.getJobPersonNowCity())                  .append('|')                  .append(f.getJobPersonOldJob())                  .append('|')                  .append(f.getJobPersonJobName())                  .append('|')                  .append(getJobExp(f));        //出生年份        String s4 = f.getJobPersonBirth().toString();        //婚姻状况        String s5 = f.getJobPersonIsMarried().toString();        //手机        String s6 = f.getJobPersonMobile().toString();        //邮箱        String s7 = f.getJobPersonEmail();        //国籍        String s8 = f.getJobPersonCountry();        html                  .append("<div class=\"info_title\">\n")                  .append("                基本资料:\n")                  .append("            </div>\n")                  .append("            <br>\n")                  .append("            <font style=\"font-family: 微软雅黑; font-size:16px; color:blue; \">\n")                  .append("                <font style=\"font-size:30px; color:red; font-weight:bold;\">")                  //姓名                  .append(s1)                  .append("</font> <br>\n")                  .append("                ")                  //职能名称——之前公司名称                  .append(s2)                  .append("<br>\n")                  .append("                ")                  //地区|当前行业职能|职位名称|工作经验                  .append(s3)                  .append("<br>\n")                  .append("                出生年份:\n")                  .append("                <font style=\"color:red;\">")                  .append(s4)                  .append("</font>　　　　　　　　　　　　　　　　　　　　\n")                  .append("                婚姻状况 <font style=\"color:red;\">")                  .append(s5)                  .append("</font>　<br>\n")                  .append("                手机:<font style=\"color:red;\">")                  .append(s6)                  .append("</font>　　　　　　　　　　　　　　　　　　　　　\n")                  .append("                邮箱:<font style=\"color:red;\">")                  .append(s7)                  .append("</font>　<br>\n")                  .append("                国籍:<font style=\"color:red;\">")                  .append(s8)                  .append("</font>　　　　　　　　　　　　　　　　　　　　　\n").append("            </font>");        j8Tools.returnJson(html.toString(), response);    }    //endregion    //region 职业意向    /**     * 职业意向     *     * @param response     */    @RequestMapping(value = "/per_jobWants")    public void per_jobWants(HttpServletResponse response, FindJobPerson f)    {        StringBuilder html = new StringBuilder();        f = getFindJobPerson(f);        //期望行业        String s1 = f.getJobPersonWantJob();        //期望职能        String s2 = f.getJobPersonFunction();        //期望地点        String s3 = f.getJobPersonWantLocation();        //期望年薪        String s4 = f.getJobPersonWantsYearSalary().toString();        //目前年薪        String s5 = f.getJobPersonOldYearSalary().toString();        html                  .append("            <div class=\"info_title\">\n")                  .append("                职业意向:\n")                  .append("            </div>\n")                  .append("            <br>\n")                  .append("            <div id=\"zyyx\">\n")                  .append("                <font style=\"font-size: 28px; color: #0052A3;\">期望行业:</font>\n")                  .append("                <font style=\"font-size: 16px; color: #2b542c;\">")                  .append(s1)                  .append("</font>\n")                  .append(_nbsp)                  .append("                <font style=\"font-size: 28px; color: #0000FF;\">期望职能:</font>\n")                  .append("                <font style=\"font-size: 16px; color: #8a6d3b;\">")                  .append(s2)                  .append("</font>\n")                  .append(str_br)                  .append("                <font style=\"font-size: 28px; color: #8a6d3b;\">期望地点:</font>\n")                  .append("                <font style=\"font-size: 16px; color: #122b40;\">")                  .append(s3)                  .append("</font>\n")                  //全角空格(&nbsp;)                  .append(_nbsp)                  .append("                <font style=\"font-size: 28px; color: #0E2D5F;\">期望年薪:</font>\n")                  .append("                <font style=\"font-size: 16px; color: #0099FF;\">")                  .append(s4)                  .append("万</font>\n")                  .append(str_br)                  .append("                <font style=\"font-size: 28px; color: #101010;\">目前年薪:</font>\n")                  .append("                <font style=\"font-size: 16px; color: #204d74;\">")                  .append(s5)                  .append("万</font>\n")                  .append("            </div>");        j8Tools.returnJson(html.toString(), response);    }    //endregion    //region 工作经历    /**     * 工作经历     *     * @param response     */    @RequestMapping(value = "/per_jobExp")    public void per_jobExp(HttpServletResponse response, FindJobPerson f)    {        StringBuilder html = new StringBuilder();        f = getFindJobPerson(f);        //<!-- 起始工作时间——结束工作时间 公司名称 -->sb0        //region 起始工作时间——结束工作时间 公司名称        //开始工作年份        String startS = f.getJobPersonStartJobTime().toString();        //结束工作时间为今天(2016)        String todayS = new SimpleDateFormat("yyyy-MM-dd").format(new Date());        //起始年份        Integer startTime = Integer.valueOf(startS.substring(0, 4));        //结束年份        Integer endTime = Integer.valueOf(todayS.substring(0, 4));        StringBuilder sb0 = new StringBuilder()                  .append(startTime)                  .append("————")                  .append(endTime)                  .append(_nbsp)                  //工作经历——公司名称                  .append(f.getJobPersonExperienceCompanyName());        //endregion        //<!-- 公司性质|公司规模|公司行业 -->sb1        //region 公司性质|公司规模|公司行业        StringBuilder sb1 = new StringBuilder()                  //性质                  .append(f.getJobPersonExperienceCompanyNature())                  .append('|')                  //规模                  .append(f.getJobPersonExperienceCompanyPeopleNumber())                  .append('|')                  //行业(当前行业职能)                  .append(f.getJobPersonOldJob());        //endregion        //<!-- 公司描述(灰色) -->        String gsms = f.getJobPersonExperienceCompanySimpleIntroduction();        //<!-- 职位名称 月薪*12个月 -->sb2        //region 职位名称 月薪*12个月        StringBuilder sb2 = new StringBuilder()                  .append(f.getJobPersonExperienceCompanyJobName())                  .append("&nbsp;&nbsp;")                  .append("月薪:")                  .append(f.getJobPersonExperienceCompanyMonthSalary())                  .append("*12个月");        //endregion        //<!-- 起始工作时间——结束工作时间 -->sb3        //region 起始工作时间——结束工作时间        StringBuilder sb3 = new StringBuilder()                  .append(startTime)                  .append("————")                  .append(endTime);        //endregion        //<!-- 工作地点:|所在部门:|汇报对象:|下属人数: -->sb4        //region 工作地点:|所在部门:|汇报对象:|下属人数        //部门        Department depT = f.getJobPersonExperienceCompanyDepartment();        StringBuilder msgDep = new StringBuilder();        if (depT == null)        {            msgDep.append(f.getJobPersonName())                      .append("所在部门为空!");        }        else        {            msgDep.append(depT.getDepartmentName());        }        StringBuilder sb4 = new StringBuilder()                  .append("工作地点:")                  .append(f.getJobPersonExperienceCompanyLocation())                  .append('|')                  .append("所在部门:")                  .append(msgDep.toString())                  .append('|')                  .append("汇报对象:")                  .append(f.getJobPersonExperienceCompanyJobReportToWHo())                  .append('|')                  .append("下属人数:")                  .append(f.getJobPersonExperienceCompanyUnderlingPeople());        //endregion        //<!-- 工作职责: -->        String gzzz = "&nbsp;" + f.getJobPersonExperienceCompanyDutyOfWork();        //<!-- 工作业绩: -->        String gzyj = f.getJobPersonExperienceCompanyScore();        html                  .append("<table id=\"tb_person_jobExp\" width=\"90%;\" border=\"0\">\n")                  .append("                <tr>\n")                  .append("                    <td colspan=\"2\" style=\"background-color: #9d9d9d;\">\n")                  .append("                        <!--起始工作时间——结束工作时间 公司名称 -->\n")                  .append("                        <font style=\"color: #00458a\">")                  .append(sb0.toString())                  .append("</font>\n")                  .append("                    </td>\n")                  .append("                </tr>\n")                  .append("                <tr>\n")                  .append("                    <td colspan=\"2\">\n")                  .append("                        <!-- 公司性质|公司规模|公司行业 -->\n")                  .append("                        <font style=\"color: #0052A3;\">")                  .append(sb1.toString())                  .append("</font>\n")                  .append("                    </td>\n")                  .append("                </tr>\n")                  .append("                <tr>\n")                  .append("                    <td colspan=\"2\">\n")                  .append("                        <!-- 公司描述(灰色) -->\n")                  .append("                        <font style=\"color: #404040;\">")                  .append(gsms)                  .append("</font>\n")                  .append("                    </td>\n")                  .append("                </tr>\n")                  .append("                <tr>\n")                  .append("                    <td>\n")                  .append("                        <!-- 职位名称 月薪*12个月 -->\n")                  .append("                        <font style=\"background-color: slategray; color: black;\">\n")                  .append("                            ")                  .append(sb2.toString())                  .append("\n")                  .append("                        </font>\n")                  .append("                    </td>\n")                  .append("                    <td>\n")                  .append("                        <!-- 起始工作时间——结束工作时间 -->\n")                  .append("                        <font style=\"color: darkorange\">")                  .append(sb3.toString())                  .append("</font>\n")                  .append("                    </td>\n")                  .append("                </tr>\n")                  .append("                <tr>\n")                  .append("                    <td colspan=\"2\">\n")                  .append("                        <!-- 工作地点:|所在部门:|汇报对象:|下属人数: -->\n")                  .append("                        <font style=\"color: darkmagenta\">\n")                  .append("                            ")                  .append(sb4.toString())                  .append("\n")                  .append("                        </font>\n")                  .append("                    </td>\n")                  .append("                </tr>\n")                  .append("                <tr>\n")                  .append("                    <td colspan=\"2\">\n")                  .append("                        <!-- 工作职责: -->\n")                  .append("                        <font style=\"color: teal\">")                  .append(gzzz)                  .append("</font>\n")                  .append("                    </td>\n")                  .append("                </tr>\n")                  .append("                <tr>\n")                  .append("                    <td colspan=\"2\">\n")                  .append("                        <!-- 工作业绩: -->\n")                  .append("                        <font style=\"color: navy\">")                  .append(gzyj)                  .append("</font>\n")                  .append("                    </td>\n")                  .append("                </tr>\n")                  .append("            </table>");        j8Tools.returnJson(html.toString(), response);    }    //endregion    //region 教育经历    /**     * 教育经历     *     * @param response     */    @RequestMapping(value = "/per_eduction")    public void per_eduction(HttpServletResponse response, FindJobPerson f)    {        StringBuilder html = new StringBuilder();        f = getFindJobPerson(f);        j8Tools.returnJson(html.toString(), response);    }    //endregion    //region 项目经验    /**     * 项目经验     *     * @param response     */    @RequestMapping(value = "/per_prjExp")    public void per_prjExp(HttpServletResponse response, FindJobPerson findJobPerson)    {    }    //endregion    //region 自我评价    /**     * 自我评价     *     * @param response     */    @RequestMapping(value = "/per_introduMe")    public void per_introduMe(HttpServletResponse response, FindJobPerson findJobPerson)    {    }    //endregion    //region 对应的岗位    /**     * 对应的岗位     *     * @param response     */    @RequestMapping(value = "/per_role")    public void per_role(HttpServletResponse response, FindJobPerson findJobPerson)    {    }    //endregion    //endregion    //region 显示所有公司名称    /**     * 显示所有公司名称     *     * @param response     */    @RequestMapping(value = "/findAllCompanyNames")    public void findAllCompanyNames(HttpServletResponse response)    {        List<String> companyNames = null;        try        {            companyNames = findJobPersonService.findAllCompanyNames();            JSONArray jsonArray = new JSONArray();            //map            JSONObject object = new JSONObject();            //region 将查询结果压到object中            for (Iterator<String> elIt = companyNames.iterator(); elIt.hasNext(); )            {                String s = elIt.next();                object.put("jobPersonName", s);                jsonArray.add(object);            }            //endregion            String baseStr = "{\"total\":" + companyNames.size() + ",\"rows\":";            baseStr = baseStr + jsonArray.toString() + "}";            j8Tools.returnJson(baseStr, response);            actionFlag = true;        }        catch (Exception ex)        {            actionFlag = false;        }        finally        {            j8Tools.doCheck(actionFlag);        }    }    //endregion    //region 显示行业职能树形结构    /**     * 显示行业职能树形结构     *     * @param response     */    @Deprecated    @RequestMapping(value = "/treeJobFunction")    public void treeJobFunction(HttpServletResponse response)    {        List<CompanyIndustry> comList = null;        try        {            //查询所有职能            comList = companyIndustryService.findAll();            String html = "<ul class=\"easyui-tree\">\n" +                      "    <li>\n";            for (Iterator<CompanyIndustry> it = comList.iterator(); it.hasNext(); )            {                //获取行业职能                CompanyIndustry c = it.next();                html += "        <span>" + c.getIndustryName() + "</span>\n" +                          "        <ul>\n";                Set<CompanyRole> roleSet = c.getRoleSet();                for (Iterator<CompanyRole> itR = roleSet.iterator(); itR.hasNext(); )                {                    CompanyRole cr = itR.next();                    html += "            <li>" + cr.getRole() + "</li>\n";                }                html += "        </ul>\n";            }            html += "    </li>\n" +                      "</ul>";            j8Tools.returnJson(html.toString(), response);            actionFlag = true;        }        catch (Exception ex)        {            actionFlag = false;        }        finally        {            j8Tools.doCheck(actionFlag);        }    }    //endregion}//region 注释//"                            [空格]java高级软件工程师[空格]2万*12个月\n" +//endregion